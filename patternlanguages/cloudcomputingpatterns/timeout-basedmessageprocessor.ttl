@prefix : <http://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@base <http://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns/> .

#################################################################
#    Ontology
#################################################################

<timeout-basedmessageprocessor>
    rdf:type owl:Ontology ;
    owl:imports <http://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns> .


#################################################################
#    Individual
#################################################################

<timeout-basedmessageprocessor#Timeout-basedMessageProcessor>
    rdf:type owl:NamedIndividual , <http://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#CloudComputingPattern> ;
    <http://purl.org/patternpedia#hasName> "Timeout-based Message Processor"^^xsd:string ;
    :hasIcon "http://www.cloudcomputingpatterns.org/icons/timeout_based_message_processor_icon.png"^^xsd:anyURI ;
    :hasContext "A Message-oriented Middleware uses Timeout-based Delivery to ensure that messages are received successfully by at least one client. Additionally, it shall be assured by the application that a message has also been properly processed after its reception."^^xsd:string ;
    :hasDrivingQuestion "How can an application process messages while guaranteeing that all messages handled by the application are processed at-least-once?"^^xsd:string ;
    :hasIntent "Clients acknowledge message receptions and processing to ensure that all messages are handled by an application. If a message is not acknowledged after a certain timeout, it is processed by a different client."^^xsd:string ;
    :hasSolution "Instead of sending an acknowledgement right after receiving a message, a timeout-based message processor sends this acknowledgement after it has successfully processed the message."^^xsd:string ;
    :hasSolutionSketch "http://www.cloudcomputingpatterns.org/sketches/timeout_based_message_processor_sketch.png"^^xsd:anyURI .

