@prefix : <https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@base <https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns/> .

#################################################################
#    Ontology
#################################################################

<eventualconsistency>
    rdf:type owl:Ontology ;
    owl:imports <https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns> .


#################################################################
#    Individual
#################################################################

<eventualconsistency#EventualConsistency>
    rdf:type owl:NamedIndividual , <https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#CloudComputingPattern> ;
    <https://purl.org/patternpedia#hasName> "Eventual Consistency"^^xsd:string ;
    :hasIcon "https://www.cloudcomputingpatterns.org/icons/eventual_consistency_icon.png"^^xsd:anyURI ;
    :hasContext "Using multiple replicas of data is vital to ensure resiliency of a storage offering towards resource failures. Keeping all these replicas in a consistent state, however, requires a significant overhead as multiple or all data replicas have to be accessed during read and write operations."^^xsd:string ;
    :hasDrivingQuestion "How can data be distributed among replicas with focus on increased availability and performance, while being resilient towards connectivity problems?"^^xsd:string ;
    :hasIntent "If data is stored at different locations (replicas) to improve response time and avoid data loss in case of failures. Performance and the availability of data in case of network partitioning are enabled by ensuring data consistency eventually and not at all times."^^xsd:string ;
    :hasSolution "The consistency of data is relaxed. This reduces the number of replicas that have to be accessed during read and write operations. Data alterations are eventually transferred to all replicas by propagating them asynchronously over the connection network."^^xsd:string ;
    :hasSolutionSketch "https://www.cloudcomputingpatterns.org/sketches/eventual_consistency_sketch.png"^^xsd:anyURI .

