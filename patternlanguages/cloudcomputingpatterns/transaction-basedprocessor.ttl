@prefix : <http://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@base <http://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns/> .

#################################################################
#    Ontology
#################################################################

<transaction-basedprocessor>
    rdf:type owl:Ontology ;
    owl:imports <http://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns> .


#################################################################
#    Individual
#################################################################

<transaction-basedprocessor#Transaction-basedProcessor>
    rdf:type owl:NamedIndividual , <http://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#CloudComputingPattern> ;
    <http://purl.org/patternpedia#hasName> "Transaction-based Processor"^^xsd:string ;
    :hasIcon "http://www.cloudcomputingpatterns.org/icons/transaction_based_processor_icon.png"^^xsd:anyURI ;
    :hasContext "A Message-oriented Middleware can use Transaction-based Delivery of messages to ensure that messages are received successfully by a client. However, using this approach no assurances can be made regarding the processing of that received message."^^xsd:string ;
    :hasDrivingQuestion "How can an application component ensure that all messages it receives are processed successfully and altered data is persisted successfully after processing?"^^xsd:string ;
    :hasIntent "Components receive messages or read data and process the obtained information under a transactional context to ensure that all received messages are processes and all altered data is consistent after processing, respectively."^^xsd:string ;
    :hasSolution "Transaction-based Delivery subsumes reading the message from a queue and deleting it from a queue in one transaction. The Transaction-based Processor extends the transactional context to the processing of the message in the receiver. Analogous, if interacting with a storage offering, the Transaction-based Processor reads, processes and writes data in one transactional context."^^xsd:string ;
    :hasSolutionSketch "http://www.cloudcomputingpatterns.org/sketches/transaction_based_processor_sketch.png"^^xsd:anyURI .

