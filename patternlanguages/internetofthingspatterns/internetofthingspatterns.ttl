@prefix : <http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@base <http://purl.org/patternpedia/patternlanguages/internetofthingspatterns> .

<http://purl.org/patternpedia/patternlanguages/internetofthingspatterns> rdf:type owl:Ontology ;
                                                         owl:imports <http://purl.org/patternpedia> .

#################################################################
#    Object Properties
#################################################################

###  http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#hasSource
:hasSource rdf:type owl:ObjectProperty ;
           rdfs:domain :InternetOfThingsPatternRelationDescriptor ;
           rdfs:range :InternetOfThingsPattern .


###  http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#hasTarget
:hasTarget rdf:type owl:ObjectProperty ;
           rdfs:domain :InternetOfThingsPatternRelationDescriptor ;
           rdfs:range :InternetOfThingsPattern .


#################################################################
#    Data properties
#################################################################

###  http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#alias
:alias rdf:type owl:DatatypeProperty .


###  http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#benefit
:benefit rdf:type owl:DatatypeProperty .


###  http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#context
:context rdf:type owl:DatatypeProperty .


###  http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#drawback
:drawback rdf:type owl:DatatypeProperty .


###  http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#examples
:examples rdf:type owl:DatatypeProperty .


###  http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#force
:force rdf:type owl:DatatypeProperty .


###  http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#icon
:icon rdf:type owl:DatatypeProperty .


###  http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#intent
:intent rdf:type owl:DatatypeProperty .


###  http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#problem
:problem rdf:type owl:DatatypeProperty .


###  http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#result
:result rdf:type owl:DatatypeProperty .


###  http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#solution
:solution rdf:type owl:DatatypeProperty .


###  http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#solutionSketch
:solutionSketch rdf:type owl:DatatypeProperty .


###  http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#variant
:variant rdf:type owl:DatatypeProperty .


#################################################################
#    Classes
#################################################################

###  http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#InternetOfThingsPattern
:InternetOfThingsPattern rdf:type owl:Class ;
                         rdfs:subClassOf <http://purl.org/patternpedia#Pattern> ,
                                         [ rdf:type owl:Restriction ;
                                           owl:onProperty :force ;
                                           owl:someValuesFrom xsd:string
                                         ] ,
                                         [ rdf:type owl:Restriction ;
                                           owl:onProperty :alias ;
                                           owl:allValuesFrom xsd:string
                                         ] ,
                                         [ rdf:type owl:Restriction ;
                                           owl:onProperty :benefit ;
                                           owl:allValuesFrom xsd:string
                                         ] ,
                                         [ rdf:type owl:Restriction ;
                                           owl:onProperty :drawback ;
                                           owl:allValuesFrom xsd:string
                                         ] ,
                                         [ rdf:type owl:Restriction ;
                                           owl:onProperty :solutionSketch ;
                                           owl:allValuesFrom xsd:anyURI
                                         ] ,
                                         [ rdf:type owl:Restriction ;
                                           owl:onProperty :variant ;
                                           owl:allValuesFrom xsd:string
                                         ] ,
                                         [ rdf:type owl:Restriction ;
                                           owl:onProperty <http://purl.org/patternpedia#hasName> ;
                                           owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                                           owl:onDataRange xsd:string
                                         ] ,
                                         [ rdf:type owl:Restriction ;
                                           owl:onProperty :context ;
                                           owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                                           owl:onDataRange xsd:string
                                         ] ,
                                         [ rdf:type owl:Restriction ;
                                           owl:onProperty :examples ;
                                           owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                                           owl:onDataRange xsd:string
                                         ] ,
                                         [ rdf:type owl:Restriction ;
                                           owl:onProperty :icon ;
                                           owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                                           owl:onDataRange xsd:anyURI
                                         ] ,
                                         [ rdf:type owl:Restriction ;
                                           owl:onProperty :intent ;
                                           owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                                           owl:onDataRange xsd:string
                                         ] ,
                                         [ rdf:type owl:Restriction ;
                                           owl:onProperty :problem ;
                                           owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                                           owl:onDataRange xsd:string
                                         ] ,
                                         [ rdf:type owl:Restriction ;
                                           owl:onProperty :result ;
                                           owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                                           owl:onDataRange xsd:string
                                         ] ,
                                         [ rdf:type owl:Restriction ;
                                           owl:onProperty :solution ;
                                           owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                                           owl:onDataRange xsd:string
                                         ] .


###  http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#InternetOfThingsPatternRelationDescriptor
:InternetOfThingsPatternRelationDescriptor rdf:type owl:Class ;
                                           rdfs:subClassOf <http://purl.org/patternpedia#PatternRelationDescriptor> .


###  http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#InternetOfThingsPatterns
:InternetOfThingsPatterns rdf:type owl:NamedIndividual ,
                                   <http://purl.org/patternpedia#PatternLanguage> ;
                          <http://purl.org/patternpedia#containsPattern> <http://purl.org/patternpedia/patternlanguages/internetofthingspatterns/deviceshadow#DeviceShadow> ,
                                                                         <http://purl.org/patternpedia/patternlanguages/internetofthingspatterns/devicegateway#DeviceGateway> ;
                          <http://purl.org/patternpedia#hasLogo> "https://media-assets-05.thedrum.com/cache/images/thedrum-prod/s3-news-tmp-112560-internet-of-things--default--300.jpg"^^xsd:anyURI ;
                          <http://purl.org/patternpedia#hasName> "Internet of Things Patterns"^^xsd:string .

###  Generated by the OWL API (version 4.2.8.20170104-2310) https://github.com/owlcs/owlapi


###  http://purl.org/patternpedia/patternlanguages/internetofthingspatterns/deviceshadow#DeviceShadow
<http://purl.org/patternpedia/patternlanguages/internetofthingspatterns/deviceshadow#DeviceShadow> rdf:type owl:NamedIndividual ,
                       <http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#InternetOfThingsPattern> ;
              <http://purl.org/patternpedia#hasName> "Device Shadow"^^xsd:string ;
              <http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#alias> "Thing Shadow"^^xsd:string ,
                     "Virtual Device"^^xsd:string ;
              <http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#benefit> "Additional Functionality: If all communication goes through a DEVICE SHADOW, additional functionality can be implemented, such as batch messaging, filtering, or caching."^^xsd:string ,
                       "Security: By only communicating with a single, well-known target, security can be increased, because devices can categorically deny communication attempts from any other source."^^xsd:string ,
                       "Unified Handling: The communication with devices can be handled as if they are Always-On, even if they really are not. Therefore, time autonomy between backend and devices is established."^^xsd:string ;
              <http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#context> "Devices, such as Constrained Devices, Semi-Constrained Devices, and Unconstrained Devices, might operate in Normally-Off, Low-Power, or Always-On modes. Either because of their operation modes or because of external circumstances, these devices might be offline at various times."^^xsd:string ;
              <http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#intent> "Some device are only intermittently online. To allow other components to interact with them regardless of their connection state, store a persistent virtual representation of the devices online. Use this representation for all communication and synchronize it with the device once it is back online."^^xsd:string ;
              <http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#drawback> "Eventual Consistency: The virtual device representation is only eventually consistent with its actual state."^^xsd:string ,
                        "Obsolescence: By the time an offline device reconnects and receives stored commands, these commands might have become obsolete. To avoid stale commands, the MESSAGE EXPIRATION Pattern [Hohpe and Woolf 2004] can be used."^^xsd:string ,
                        "Quality of Service: If all communication is forced through the backend server, latency and decreased availability for communication that could be done completely local can be a problem."^^xsd:string ,
                        "Synchronization Issues: State updates could be lost if a new state update is written to the device shadow that is based on a state that is older than the current last known state. One way to avoid such issues is versioning the states and using OPTIMISTIC OFFLINE LOCK [FOWLER ET AL. 2002]."^^xsd:string ;
              <http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#examples> "AWS IoT stores a persistent virtual version of each connected device that includes the last reported state and the desired future state of the device. This allows applications to read and write device state irrespective of the actual availability of the device [Amazon Web Services 2015c, 2015b]. Azure IoT Suite stores device models in a device registry that is an eventually consistent view of device data [Microsoft 2015c]. Kii IoT Platform's Thing Interaction Framework saves the latest state of registered things on the backend server. Applications that request a device's state get the state stored on the server [Kii 2015b]."^^xsd:string ;
              <http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#force> "Availability: Sending commands to or reading state from offline devices is not possible."^^xsd:string ,
                     "Consistency: Often a slightly out-of-date state is better than no state."^^xsd:string ,
                     "Timeliness: Waiting for currently offline device to come online again to send or receive data in a synchronous fashion can lead to long idle times and should be avoided."^^xsd:string ;
              <http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#icon> "http://internetofthingspatterns.com/images/icons/device-shadow.png"^^xsd:anyURI ;
              <http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#problem> "Some devices will be only intermittently online in order to save energy or because of network outages. Other components want to interact with them but do not know when they will be reachable."^^xsd:string ;
              <http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#result> "By storing persistent virtual representations of the devices on the backend server and communicating only through those, device communication can be decoupled. This allows reading device state as well as sending device commands even if the device is offline. Essential to this is a persistent storage on the backend that can store virtual device representations reliably for many devices and that can handle read and write access from multiple sources. If commands are saved they should be queued, unless only the newest command is regarded as relevant. When a device reconnects to the backend, which can happen according to a schedule or based on certain events, it can retrieve and process the stored command and update the last known state. To let other components know that a device is online, a flag can be stored with the device shadow. When a device connects or gracefully disconnects it enables or disables this flag itself. Otherwise, the flag is set to false after a certain time of inactivity or by another mechanism, for example by the last will and testament of the MQTT protocol. Conceivably, DEVICE SHADOW functionality could also be implemented on DEVICE GATEWAYS to allow localized decoupling between devices connected to one DEVICE GATEWAY. This would bring the benefits of a DEVICE SHADOW to these devices, even if the Gateway might be disconnected from the rest of the network from time to time. A problem here could be that a DEVICE GATEWAY might not be able to reliably provide the persistent storage that is needed."^^xsd:string ;
              <http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#solution> "Store a persistent virtual representation of each device on some backend server. Include the latest received state from the device, as well as commands not yet sent to the device. Do all communication from and to the device through this virtual version. Synchronize the virtual representation with the actual device state when the device is online."^^xsd:string ;
              <http://purl.org/patternpedia/patternlanguages/internetofthingspatterns#solutionSketch> "http://internetofthingspatterns.com/images/sketches/device-shadow.png"^^xsd:anyURI .
